
;;============================ OTHER MODE ========================== ‚≠ï TODO [ ] \ /

;;* App Filtering ====================
;; ‚ÑπÔ∏è app filtering notes:
	;; application modes are defined with regex of the bundleID of the app
	;; so far drafts-mode works


;; {:des "app-mode":rules[[condi :appname]
;; [:#Cj [:open "something"]]
;; ]}
;; {:des "bear-mode":rules[[condi :Bear]
;; [:#Cj [:open "something"]]
;; ]}

{:des "drafts-mode":rules[
	[:condi :draftsApp]
	;; [:condi :drafts]
	[:!TCw [:open "raycast://confetti"]] ;;‚Ä¢ /+q to Search Quick Links via Raycast
	[:!TCw [:km "¬© Open in New Window"]] ;;‚Ä¢ /+q to Search Quick Links via Raycast
	]}

{:des "browsers":rules[ ;; üëç this works, so problem with above could be escaping the bundle id, KM issue, turned off confetty
	[:condi :Browsers]
	;; [:c [:open "raycast://confetti"]]
	;; [:!TCw [ ] ;;‚Ä¢ /+q to Search Quick Links via Raycast
	]}
;; ]}

] ;; CLOSES main




:simlayer-threshold 210 ;def = 50 ;! when set to 1000 there is very noticable delay and 50 isnt enough time, 300 too much
	;! seems to create obsene delay on  on key up
;;* Devices, Applications and Input Sources  ==================================
	:devices {
			:macbook-internal [{:product_id 631 :vendor_id 1452}]
			:uhk [{:product_id 24866 :vendor_id 7504}]
			:uhk-2 [{:product_id 24868 :vendor_id 7504}]
			:logitech-mouse [{:product_id 49738 :vendor_id 1133}]
			;; TODO add other gaming mouse, 
			;;? i wonder if you can filter for universal control and fix some of those problems

			}
;;* APPLICATIONS
	:applications {
		;; :vscode
					
		;; :bear ["^net\\.shinyfrog\\.bear$"] ;; todo, not working yet...
		:drafts        ["^com\\.agiletortoise\\.Drafts-OSX"] ;; üëç works
		
		:slidepad	   ["^com\\.slidepad\\.slidepad-setapp"]
		:dynalist      ["^io\\.dynalist$"]
		:Finder        ["^com\\.apple\\.finder$"]
;; ------------- groups
		:Terminals     ["^com\\.apple\\.Terminal$", "^com\\.googlecode\\.iterm2$", "^co\\.zeit\\.hyperterm$", "^co\\.zeit\\.hyper$", "^io\\.alacritty$", "^net\\.kovidgoyal\\.kitty$"]
		:Debuggers     ["^org\\.mozilla\\.firefox$", "^org\\.mozilla\\.firefoxdeveloperedition$", "^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$", "^com\\.apple\\.Safari$", "^com\\.microsoft\\.VSCode$"]
		:Browsers      ["^org\\.mozilla\\.firefox$", "^org\\.mozilla\\.firefoxdeveloperedition$", "^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$", "^com\\.apple\\.Safari$"]
		:Chromes       ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]
		}
	
	
:input-sources {
		:squirrel {:input_mode_id   "com.googlecode.rimeime.inputmethod.Squirrel"
					:input_source_id "com.googlecode.rimeime.inputmethod.Squirrel.Rime"
					:language        "zh-Hans"}
		:us {:input_mode_id   ""
				:input_source_id "com.apple.keylayout.US"
				:language        "en"}
		}
;; * conditions 
;; [{:des   "conditions" :rules [[:condi :us :hhkb]
;;  [:l :!COi [:Browsers :z-mode]]]}]}
;; text you'd put in the rules
