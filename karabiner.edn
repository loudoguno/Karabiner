{ ;; karabiner.edn 1.01 2024-10 (transition to layers where feasable and USW work)
;;? DEFINITIONS (profiles, devices, applications, io-sources, templates, modifiers froms, tos, layers, simlayers)
;; PROFILES (todo empty)
	;; :simlayer-threshold 210 ;def = 50 ;! when set to 1000 there is very noticable delay and 50 isnt enough time, 300 too much
		;! seems to create obsene delay on  on key up
:devices {      ;;? DEVICES (todo org)
		;; todo add macbook internals
			;; :macbook-internal [{:product_id 631 :vendor_id 1452}]
			;; :mbp [{:product_id 631 :vendor_id 1452}] 
			;; not sure which one this is 
		;; todo add uhks
			:uhk [{:product_id 24866 :vendor_id 7504}]
			:uhk-2 [{:product_id 24868 :vendor_id 7504}]
		;; todo add mice
			:logitech-mouse [{:product_id 49738 :vendor_id 1133}]
		;; TODO add other gaming mouse, 
		;;? i wonder if you can filter for universal control and fix some of those problems
	}
:applications{  ;;? APPLICATIONS
		:Terminals     ["^com\\.apple\\.Terminal$", "^com\\.googlecode\\.iterm2$", "^co\\.zeit\\.hyperterm$", "^co\\.zeit\\.hyper$", "^io\\.alacritty$", "^net\\.kovidgoyal\\.kitty$"]
		:Debuggers     ["^org\\.mozilla\\.firefox$", "^org\\.mozilla\\.firefoxdeveloperedition$", "^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$", "^com\\.apple\\.Safari$", "^com\\.microsoft\\.VSCode$"]
		:Browsers      ["^org\\.mozilla\\.firefox$", "^org\\.mozilla\\.firefoxdeveloperedition$", "^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$", "^com\\.apple\\.Safari$"]
		:Chromes       ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]
	;; TODO (applications)
		:Finder        ["^com\\.apple\\.finder$"]
		:dynalist      ["^io\\.dynalist$"]
		:slidepad	   ["^com\\.slidepad\\.slidepad-setapp"]
		:drafts        ["^com\\.agiletortoise\\.Drafts-OSX"] ;; 👍 works		
		;; :bear ["^net\\.shinyfrog\\.bear$"] ;; todo, not working yet...
		;; :vscode					
	}
:input-sources{ ;; INPUT SOURCES
	:us {:input_mode_id   ""
		:input_source_id "com.apple.keylayout.US"
		:language        "en"}
	}
:templates {    ;;? TEMPLATES
		:run "%s"
		:open "open \"%s\"" ; open file
		:km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
		:btt "osascript -e 'tell application \"BetterTouchTool\" to  trigger_named \"%s\"'"
	; Sounds and Audio Feedback invokded by calling `afplay`, use of emojis to make itmore readable but sometimes causes issues
		:SPKR0 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillIn.aiff"
		:SPKR1 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillOut.aiff"
		:SPKR2 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrawerClosing.aiff"
		:SPKR3 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrawerClosing.aiff"
		:🔈 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillIn.aiff"
		:🔉 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillOut.aiff"
		:🔊 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrawerClosing.aiff"
		:📢 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrawerClosing.aiff" 
		:🛎 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/Focus2.aiff" ;; high-pitched click
		:🔔 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/WindowActivated.aiff" ;; nice sounding soft beep
		;; 🛎🔔📯
		:Focus2 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/Focus2.aiff" ;; high-pitched click
		:beep "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/WindowActivated.aiff" ;; nice sounding soft beep
		:morse "afplay /System/Library/Sounds/morse.aiff" ;; don't really like this 1 as much...
		:pop "afplay /System/Library/Sounds/Pop.aiff"
		:tink "afplay /System/Library/Sounds/Tink.aiff"	
		:soundOn "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillOut.aiff"
		:soundOff "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillIn.aiff"
		;; :gokurl "goku" ;; trying to add load goku
	}
:modifiers {    ;; MODIFIERS (todo empty)
	}
:froms {        ;; FROMS (todo empty)
	}
:tos {          ;; TOS (todo empty)
	}
:layers {       ;;? LAYERS
	:space-mode {:key :spacebar ;;* space layer (space
		:condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!quote-mode :!fslashµ :!.µ :!↩µ]
		} ; prevents space mode from overiding F and D modes 
	:Rctrl-mode {:key :right_control :alone {:key :spacebar} :condi [:!f& :!d& :!c& :!k& :!w& :!space-mode]} ; :Rctrl-mode {:key :right_control :condi [:!f& :!d& :!c& :!k& :!w&]}			
	
	:tildeµ {:key :grave_accent_and_tilde ;;* tilde layer (tildeµ)
		:condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!backslashµ :!quote-mode :!fslashµ :!=µ :!↩µ]
		}
	:hyphenµ {:key :hyphen ;;* hyper layer (hyphenµ)
		:condi [:!space-mode]
		}
	:=µ {:key :equal_sign ;;* equal sign layer (=µ
		:condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!↩µ]
		}	
	:backslashµ {:key :backslash ;;* backslash layer
		:condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!=µ :!↩µ]
		}
	:fslashµ {:key :slash ;;* slash layer (fslashµ) ============
		:condi [:!space-mode :!tildeµ :!backslashµ :!fslashµ :!=µ]
		}
	:.µ {:key :period ;;* period layer (.µ) ============
		:condi [:!space-mode :!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!=µ :!↩µ]
		}
	:↩µ {:key :return_or_enter  ;;* return layer (↩µ)
		:condi [:!space-mode :!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!=µ :!↩µ]
		}
	
	;;row1 escapeµ, F1µ, F12µ,
	;;row2 tildeµ, 1µ, hyphenµ, =µ, deleteµ
		:1µ {:key :1}
			;; [ ] search and replace...
	;;row3 tabµ, [/] (open_bracketµ), `\` (backslashµ)
		; :tab-mode {:key :tab} ;; tab currently assigned to fn for left hand window focus switching via Context
		;; should probably ad tab as a tuper mode bc then can make 	qwerty fn+character... or maybe theres a way to do it with spacebar+ capslock and 
	;;row4 caps_lockµ, semicolonµ, quoteµ, returnµ
		;; :quote-mode {:key :quote condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!=µ :!↩µ]}
		;; :return-mode {:key :return_or_enter :condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!=µ :!↩µ :!space-mode]}
	;;row5 left_shiftµ, zµ, xµ, `,` (commaµ), `.` (.µ), / (slashµ), right_shiftµ
		;; [ ] 
	;;row6 left_arrowµ, right_arrowµ, up_arrowµ, down_arrowµ
	;; :=µ {:key :equal_sign ;;* equal sign layer (=µ
		;; :condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD :!tildeµ :!backslashµ :!quote-mode :!fslashµ :!↩µ]
		;; }

	;;todo † new layer definition template
		;; :KEYµ {:key :KEY 
			;; :condi [:!space-mode]
			;; }
	;;todo [ ] figure out if arrows get triggered when space+jlik
	}
:simlayers {    ;;? SIMLAYERS
		;; :semicolon-mode {:key :semicolon} :! taken out in preference to have semicolon mapped to `fn` for use with Context's quick search
		:a& {:key :a}
		:b& {:key :b}
		:c& {:key :c}
		:d& {:key :d :condi :!space-mode} ;why is this here?
		:e& {:key :e}
		:f& {:key :f}
		:g& {:key :g}
		:h& {:key :h}
		:i& {:key :i}
		:j& {:key :j}
		:k& {:key :k}
		:l& {:key :l}
		:m& {:key :m}
		:n& {:key :n}
		:o& {:key :o}
		:p& {:key :p}
		:q& {:key :q}
		:r& {:key :r}
		:s& {:key :s}
		:t& {:key :t}
		:u& {:key :u}
		:v& {:key :v}
		:w& {:key :w}
		:x& {:key :x}
		:y& {:key :y}
		:z& {:key :z}
	}
:cheatsheet {   ;; 👿 CHEATSHEET
	}

:main [ ;;? MAIN RULES ==========================================
;;= SIMULTANEOUS KEYS =====================================
;;? ASSORTED RULES =====================================
	;; like yellow* associated with description and blue • associated with rule

	{:des "right_shift+space for underscore/dash":rules[ ;;* right-shift+spacebar
		[:!Rspacebar :hyphen] ;;• right_shift+spacebar for hyphen "-" (aka dash)
		[:!SRspacebar :!Shyphen] ;;• both shift + spacebar for underscore 
		;; COMMENTS: 
			;; modified to always require rightshift
			;; was causing issues with UHK right control still need #todo
				;; [:!Sspacebar :!Shyphen] ;;- left_shift+spacebar for underscore "_"
			;; 
		]}
	;;* double press ⌘+q to quit to prevent accidental
		{:des "double press ⌘+q to quit " :rules[ [:!C#Pq [ :!Cq ["⌘q" 0]] ["⌘q" 1]] [:!C#Pq ["⌘q" 1] nil {:delayed {:invoked ["⌘q" 0] :canceled ["⌘q" 0]}}] ]}
		;;= HYPER MODE and MODIFIERS ==============================
	;;* capslock as hyper
		{:des "Capslock as hyper" :rules [ [:condi :!space-mode :!Rctrl-mode] ;;* Capslock as hyper (command+shift+option+control)
		[:##caps_lock :!!left_control nil {:alone :escape} ] 
			]}
		;;* FN stuff (semicolon as fn, fn from UHK, 
		{:des "Semicolon as fn" :rules [ [:condi :!space-mode :!Rctrl-mode] ;;* Semicolon as FN for use with Contexts quicksearch
		[:##semicolon :##fn nil {:alone :semicolon}] ]}
		;;TODO fn is used with Contexts for quick witching
		;;* fn from UHK
			{:des "FN from UHK" :rules [[:#SOCTf24 :fn [:uhk] ]]} ;;* UHK FN as mac fn via UHK hardcoded f24 > fn in KE but only for uhk
			{:des "FN from UHK 2" :rules [[:#SOCTf24 :fn [:uhk-2] ]]} ;;* for V2	
	{:des "iPad defaults" :rules [ ;;? iPad defaults ========== 
		[:!Cperiod [[:SPKR3] :escape]] ;;• ⌘+period for escape
	;;TODO (ASSORTED) A	;; [ ] decide on format (readability by line length or more on 1 line?)
		[:!Cperiod [[:SPKR3] :escape]] ;;• 🌐+\ for cycle sidevview
		;; [:!Cperiod [[:SPKR3] :escape]] ;;• 🌐+q for Quick Note #todo
		[:!!CSOTgrave_accent_and_tilde [[:SPKR3] :!Tf4]] ;;• 🌐+` cycle focus between windows #todo broken 
		[:!!backslash [[:SPKR3] :!Ti]] ;;• 🌐+\ show/hide sideview
		;; [:!Treturn_or_enter [[:SPKR3] [:btt "Show Context Menu for Selected Item"]]] ;;• ⌃+return for context menu #??? did i add this before new Seqoia 
		;; [:!Treturn_or_enter [[:SPKR3] :insert]] ;;• ⌃+return for context menu
		;; [:m [[:SPKR3] [:btt "Show Context Menu for Selected Item"]] ] ;;• c+m for btt "Show Context Menu+ for Selected Item" ✨ NEW 12/01/23
		]}
;;* LAYERS =====================================
;; ESCAPE MODE (empty) ================================================================
	;; {:des "escape-mode for escape things" :rules [ :escape&
	;;TODO (ESCAPE MODE)
	;; ]}
;; F1 MODE (empty) ================================================================
	;; {:des "f1-mode for f1 things" :rules [ :f1&
	;;TODO (F1 MODE)
	;; ]}
;;? TILDE MODE tildeµ  (TO DO)================================================================
	{:des "tilde-mode for tilde things" :rules [ :tildeµ
			[:a [[:SPKR3] [:open "raycast://extensions/raycast/apple-notes/new?arguments=%7B%22text%22%3A%22%22%7D"]] ] ;;• =+a for new apple note (via raycast)
		;; [:##spacebar :!t] ;;* `+spacebar for test
	;;TODO (TILDE MODE)
	]}
;; HYPHEN MODE (disabled) ================================================================
	;; {:des "hyphen-mode for hyphen things" :rules [ :hyphen&
	;;TODO (HYPHEN MODE)
	;; ]}
;;? EQUAL_SIGN MODE =µ (✅ full) ===============================================================================
	{:des "equal_sign-mode for equal sign things" :rules [ :=µ
		; new CRUD
			[:a [[:SPKR3] [:open "raycast://extensions/raycast/apple-notes/new?arguments=%7B%22text%22%3A%22%22%7D"]] ] ;;• =+a for new apple note (via raycast)
			[:b [[:SPKR3] [:open "raycast://extensions/hmarr/bear/new-note"]] ] ;;• =+b for new bear 
			[:d [[:SPKR3] [:open "raycast://extensions/FlohGro/drafts/create-draft-and-open"]] ] ;;• =+d for new drafts
			[:o [[:SPKR3] [:open "raycast://extensions/KevinBatdorf/obsidian/createNoteCommand"]] ] ;;• =+o for new obsidian
			;; [:l [[:SPKR3] [:open "raycast://extensions/futantan/logseq/index"]] ] ;;• =+l for new logseq
			[:r [[:SPKR3] [:open "raycast://extensions/raycast/apple-reminders/create-reminder"]] ] ;;• =+r for reminders
			;; [:u [[:SPKR3] [:open "raycast://extensions/praveenjuge/ulysses/new-empty-sheet"]] ] ;;• =+u for ulyses 
		;;TODO (EQUAL_SIGN MODE)
		]}
;; DELETE MODE (empty) (empty) ================================================================
	;; {:des "delete-mode for delete things" :rules [ :delete&
		;;TODO (DELETE MODE)
		;; ]}
;; TAB MODE (todo/disabled) ================================================================
	;; {:des "tab-mode for tab things" :rules [ :tab&
	;; ;;TODO (TAB MODE)
	;; ]}
;; LEFT_BRACKET MODE (todo/disabled) ================================================================
	;; {:des "left_bracket-mode for left bracket things" :rules [ :left_bracket&
	;;TODO (LEFT_BRACKET MODE)
	;; ]}
;;! BACKSLASH MODE (TODO) ================================================================
	;; {:des "backslashµ for backslash things" :rules [ :backslash&
	;;TODO (BACKSLASH MODE)
	;; ]}
	;; {	:des "backslashµ for..." :rules [ :backslashµ
	;; [:r [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]] ] ;;• \+r to capture Roam notes
	;; [:a [[:SPKR3] [:open "raycast://extensions/raycast/apple-notes/add-text"]] ] ;• \+a for add text to apple notes 
	;; [:o [[:SPKR3] [:open "raycast://extensions/millin_gabani/obsidian-smart-capture/capture"]] ] ;;• \+o for Obsidian

	;; [:b [[:SPKR3] [:open "raycast://extensions/hmarr/bear/new-note"]]] ;;• \+b for new bear 
	;; [:XXX [[:SPKR3] [:open "URL"]] ] ;;• \+XXX for 
	;; [b [[:SPKR3] [:open]] ] ;;• \+XXX for 

		; [:s [:ToKey]] ;;• quote+s for ToKey hello
	;; ]}
;; QUOTE MODE (disabled) ================================================================
	;; {:des "quote-mode for quote things" :rules [ :quote&
	;;TODO (QUOTE MODE)
	;; ]}
	
	;; NOTE: quote is set as left control for emacs (no it's)
;;? RETURN MODE ↩µ ================================================================
	{:des "return-mode for return things" :rules [ :↩µ
		[:!!t [:open "raycast://confetti"]] ;;* works
		[:##spacebar :!!COTSreturn_or_enter]
		;; TODO (RETURN MODE)
		]}
;;? PERIOD MODE .µ (enabled, to convert) ====================================================
	{:des " period-mode for typinator and autocomplete":rules [ :.µ
		[:spacebar [[:SPKR3] :!STperiod] ] ;;• period+left_shift for Typinator Suggest Abbreviation (via ⌃⇧+. hotkey set in app pref)
		]}
;;? (FORWARD SLASH MODE fslashµ (✅ full) ===============
	{:des "slash-mode for slash things" :rules [ :fslashµ
		[:spacebar [:!CSslash [:SPKR3]] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
		[:q [[:SPKR3] [:open "raycast://extensions/raycast/raycast/search-quicklinks"]] ] ;;• /+q to Search Quick Links via Raycast
		[:a [[:SPKR3] [:open "raycast://extensions/raycast/apple-notes/index"]] ] ;;• /+o to search obsidian via searchnote command (raycast)
		[:r [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/search"]] ] ;;• /+r to search Roam notes vvis raycast 
		[:o [[:SPKR3] [:open "raycast://extensions/KevinBatdorf/obsidian/searchNoteCommand"]] ] ;;• /+o to search obsidian via searchnote command (raycast)
		[:b [[:SPKR3] [:open "raycast://extensions/hmarr/bear/index"]] ] ;;• /+b to search Bear (raycast)
		;;• Roam and Reminders commands
		[:r [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/search"]] ] ;;• /+r to search Roam 🟢
		[:!Cr [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]] ] ;;• /+r to capture to Roam 🟢
		[:#Sr [[:SPKR3] [:open "raycast://extensions/notion/notion/add-text-to-page?arguments=%7B%22text%22%3A%22%22%7D"]]] ;;• /+⌘n create Notion database page 
		[:#Tr [[:SPKR3] [:open "raycast://extensions/raycast/apple-reminders/my-reminders"]]] ;;• /+⌘n create Notion database page 
		[:#TCr [[:SPKR3] [:open "raycast://extensions/raycast/apple-reminders/create-reminder"]]] ;;• /+⌘n create Notion database page 
		;;• Bear
		;;• Obsidian

		;;• APN
		;;• Notion Commands
		    [:n [[:SPKR3] [:open "raycast://extensions/notion/notion/search-page"]]] ;;• /+⌘n for Search Notion via raycast
			[:#Cn [[:SPKR3] [:open "raycast://extensions/notion/notion/create-database-page"]]] ;;• /+⌘n create Notion database page 
			[:#Sn [[:SPKR3] [:open "raycast://extensions/notion/notion/add-text-to-page?arguments=%7B%22text%22%3A%22%22%7D"]]] ;;• /+⌘n create Notion database page 
			[:#Tn [[:SPKR3] [:open "raycast://extensions/notion/notion/quick-capture"]]] ;;• /+⌘n create Notion database page 
			[:#On [[:SPKR3] [:open "https://notion.new"]]] ;;• /+⌘n create Notion database page 
			[:#SCn [[:SPKR3] [:open "raycast://extensions/reckoning-dev/search-notion/commandSearchNotion "]]] ;;• /+⌘n create Notion database page 
			[:#TCn [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]]] ;;• /+⌘n create Notion database page
			[:#OCn [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]]] ;;• /+⌘n create Notion database page
			[:#TOn [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]]] ;;• /+⌘n create Notion database page
			[:#STn [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]]] ;;• /+⌘n create Notion database page
			[:#SOn [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]]] ;;• /+⌘n create Notion database page
			[:#SCn [[:SPKR3] [:open "raycast://extensions/roamresearch/roam-research/quick-capture"]]] ;;• /+⌘n create Notion database page
			[:#SOCn [[:SPKR3] [:open "https://notion.new"]]] ;;• /+⌘n create Notion database page 
			[:#TOCn [[:SPKR3] [:open "raycast://extensions/notion/notion/search-page"]]] ;;• /+⌘n create Notion database page
			[:#STOn [[:SPKR3] [:open "raycast://extensions/notion/notion/add-text-to-page?arguments=%7B%22text%22%3A%22%22%7D"]]] ;;• /+⌘n create Notion database page
			[:#STCn [[:SPKR3] [:open "raycast://extensions/notion/notion/add-text-to-page?arguments=%7B%22text%22%3A%22%22%7D"]]] ;;• /+⌘n create Notion database page
			[:#Qm [[:SPKR3] [:open "raycast://extensions/notion/notion/create-database-page"]]] ;;• /+⌘n create Notion database page 
			[:#RScomma [[:SPKR3] [:open "raycast://extensions/notion/notion/create-database-page"]]] ;;• /+⌘n create Notion database page 
			;; [:8 [[:SPKR3] [:open "kmtrigger://macro=F5EDE946-40E2-4AEA-827F-48CEFD38689D"]] ] ;;• /+d to search Dynalist (via km)
			;; [:l [[:SPKR3] [:open "raycast://extensions/futantan/logseq/logsearch"]] ] ;;• /+l to search logdeq (via Raycast)

	;; TODO (fslash mode)
		;; [:spacebar [:!CSslash [:SPKR3]] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
		;; [:spacebar [:open "kmtrigger://macro=F02A9897-43EA-42E6-89DD-33644529F73A"] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
		;; [:spacebar [:km "/+spacebar for Help Menu"] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
	 	;; [:h [[:SPKR3] [:open "alfred://runtrigger/com.alfredapp.hookbookmark/search-hookmark-bookmarks/"]] ] ;;• /+h to Search Hookmark Bookmarks (via Alfred worflow URL)
		;; see vscode://file/Users/loudog/Sync/config.files/Karabiner/krb-purged-2-special-char.edn:11
		;; [:spacebar [:!CSslash [:SPKR3]] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
		;; [:spacebar [:open "kmtrigger://macro=F02A9897-43EA-42E6-89DD-33644529F73A"] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
		;; [:spacebar [:km "/+spacebar for Help Menu"] ] ;;• slash+spacebar for Help Menu Search (via System hotkey ⌘⇧+/) 🟢
		;; [:#SCh [[:SPKR3] [:open "file:///Users/loudog/"]]] ;;• /+⌘n create Notion database page 
		;; [:#SCd [[:SPKR3] [:open "file:///Users/loudog/Desktop"]]] ;;• /+⌘n create Notion database page 
		;; [:#SCa [[:SPKR3] [:open "file:///Users/loudog/Applications"]]] ;;• /+⌘n create Notion database page
		;; [:#SCs [[:SPKR3] [:open "file:///Users/loudog/Sync"]]] ;;• /+⌘n create Notion database page
		;; [:#SCs [[:SPKR3] [:open "file:///Users/loudog/Sync"]]] ;;• /+⌘n create Notion database page

		]}
;;? SPACE MODE (✅ full) ===============
	{:des "spacebar mode" :rules [ ;;*= SPACE MODE =======================
	;; COMMENTS:
	;; homerow keyboard
		[:##b :spacebar :space-mode]        ;;• spacebar+b for space
		; jlik for ←↑→↓ (left/right/up/down arrows)
			[:##j :left_arrow  :space-mode]  ;;• spacebar+j for ←
			[:##l :right_arrow :space-mode] ;;• spacebar+l for →
			[:##i :up_arrow    :space-mode]    ;;• spacebar+i for ↑
			[:##k :down_arrow  :space-mode]  ;;• spacebar+k for ↓
		; spacebar+;/o/u/p/h/y for non-text characters (↩⇥, delete, page up/down)
			[:##semicolon :return_or_enter :space-mode] ;;* spacebar+return for ↩
			[:##o :tab :space-mode] ;;* spacebar+u for tab
			[:##u :!Stab :space-mode] ;;* spacebar+u for ⇧+tab
			[:##p :delete_or_backspace :space-mode] ;;* spacebar+p for delete
			[:##y :page_up :space-mode] ;;* spacebar+y for page up
			[:##h :tab :space-mode] ;;* spacebar+h for ⇥
		; spacebar+asdf for modifiers (⇧⌥⌘⌃)
			;;todo (remember thought about c instead F (check omf project))
			[:##a :left_control :space-mode] ;;* spacebar+a for ctrl
			[:##s :left_shift :space-mode] ;;* spacebar+s for shift
			[:##d :left_option :space-mode] ;;* spacebar+d for option
			[:##f :right_command :space-mode] ;;* spacebar+f for cmd
			[:##caps_lock :fn :space-mode] ;;* spacebar+caps_lock for 
	;; spacebar+xxx for shift modifiers
		[:##comma :!Scomma :space-mode] ;;• spacebar+comma for "<"
		[:##period :!Speriod :space-mode] ;;• spacebar+period for ">""
	;; spacebar+MISC for v clipboard history, m moom, c contexts, REMOVED w for contexts and tab for contexts
		[:##v [[:SPKR3][:km "Clipboard History Switcher"]] :space-mode]  ;;• spacebar+v for "Clipboard History" (via KM macro)
		[:##m [[:SPKR3]:!!f14] :space-mode] [:##m [[:SPKR2]:!!f14] :Rctrl-mode] ;;• spacebar+m for activate moom (like this one better)
		[:##c [[:SPKR3]:!CTOw] :space-mode] [:##c [[:SPKR2]:!Ospacebar] :Rctrl-mode] ;;• spacebar+c to activate Contexts
		[:##return_or_enter [[:SPKR3]:!Of12] :space-mode]  ;;• spacebar+return for Bartender Search menu bar items (via ⌥+F12 in Bartender) 🟢🔰new
	;; todo something with tab, tilde ect.... [:##tab :#menu]
	;; TODO
		;; use with
		;; [ ] +1/2/3/4 for...
		;; [ ] F1/f2/f3/f4 for... F11 to F22
		]}
;;? UP_ARROW MODE ================================================================
	;; {:des "up_arrow-mode for up arrow things" :rules [ :up_arrow&
	;; TODO (UP_ARROW MODE)
	;; ]}
;; TODO † LAYER TEMPLATE
	;; {:des "KEYKEY-mode for XXX things" :rules [ :NEWKEYµ
	;; [:!!t [:open "raycast://confetti"]] ;;* test
	;; TODO (NEWKEY MODE)
	;; ]}

;;* SIMLAYERS (a,b,c modes) ==================================================================

;;? A MODE (EMPTY) ========================================================
	;; leave empty and see vscode://file/Users/loudog/Sync/config.files/Karabiner/krb-purged.edn:144
;;? B MODE ================================================================
	{:des " b-mode for b things" :rules [ :b&
		[:i :vk_consumer_brightness_up] ;;• +i for brightness up
		[:d :vk_consumer_brightness_down] ;;• b+d for brightness
		; Bear
			[:r [:km "Jump to Bear"] ] ;;• b+r for Jump to Bear insgrey 
			;;TODO add back new bear, jump to bear, toggle bear....	
		;; BTT stuff
			;;TODO add back btt named menus, save active window for recall
	]}
;;? C MODE ================================================================
	{:des "c-mode for c things" :rules [ :c& ;;* ––––––––––––––––––––––––––––––––––––
		[:d :!Cquote] ;;• c+d for ⌘+quote (evernote default shortcut for "focus tag field")
		[:w [:km "Move Mouse to Focused Window"] ] ;;• c+w for km "Move Mouse to Focused Window" ✨new 6/12/23
		[:m [[:SPKR3] [:btt "Show Context Menu for Selected Item"]] ] ;;• c+m for btt "Show Context Menu+ for Selected Item" ✨ NEW 12/01/2	
		; macOS spaces
			[:comma [[:SPKR3] :!STOcomma]] ;;• c+comma for Switch Active Workspace Left (via System Hotkeys) 🟤 recently re-activated
			[:period [[:SPKR3] :!STOperiod]] ;;• c+period for Switch Active Workspace Right (via System Hotkeys
		; c+1/2/3 for clipboard
			[:1 [:km "copy clipboard 1"] ] ;;• c+1 copy to clipboard 1
			[:2 [:km "copy clipboard 2"] ] ;;• c+2 copy to clipboard 2
			[:3 [:km "copy clipboard 3"] ] ;;• c+3 copy to clipboard 3
	
	;;TODO for c-mode 
		;; [ ] add back km "picklist cheatsheet"
		;; rehome [:a [:km "Jump to Fantastical"] ] ;;• c+a for km "Jump to Fantastical"
		;; rehome [:o [:km "Query Contacts"] ] ;;• c+o for km "Query Contacts"

	]}
;;? D MODE ================================================================
	{:des "d-mode for d things" :rules [ :d& ;;================================== D MODE
		;; d+asfg for tab manipulation..........................................
			[:a :!Copen_bracket] 	;;• d+a for Page Back via ⌘[
			[:s :!TStab] 			;;• d+s for tab left via ⌃⇥
			[:f :!Ttab] 			;;• d+f for tab right via ⇧⌃⇥
			[:g :!Cclose_bracket] 	;;• d+g for Forward Page via ⌘]
		[:t [[:SPKR3] :dictation] ] ;;* d+t for Dictate Text (via ⇧⌃⌘d hotkey set in System Preferencees > Keyboard > Dictation)
		[:c :!Cquote] 				;;* d+c for ⌘+quote (edit tags in omnifocus, evernote ect...)
		[:k [ :open  "/Users/loudog/Desktop"] ] ;;• d+k for Switch Third Space Right
	;;TODO (D MODE)
		;; [:q [:right_gui :right_gui ]] ;;* d+q for ask siri via double press
		;; #common-commands
			;; [:w [:km "Item Up ©"]] ;;• d+w for Item Up (global KM context "Item Up ©")
			;; [:v [:km "Item Down ©"]] ;;• d+v for Item Down (global KM context "Item Down ©")
		;; rehome [:0 [:btt "raycast-todo-menuapp"] ] ;;• d+0 for Raycast todo works 
		;; rehome [:delete_or_backspace [:btt "raycast-todo-menuapp"] ] ;;• d+0 for Raycast todo works	
	]}
;;? E MODE ================================================================
	{:des "e-mode for e things" :rules [ :e& ;;===== ============================
		[:c [:km "Try Current Macro"] ] ;;•  e+c for "Try Current Macro" (via KM)
 	;;TODO (E MODE)
		;; [:f [:open "kmtrigg er://macro=EFE846C8-9B93-47C5-9A9F-9EBA0D76D79F"] ] ;;• e+f for float notes for app 🔰 
		;; Broken [:u [:open "file:///Users/loudog/Library/Application%20Support/KeyCue/KeyCue-URLs.txt"]] ;;• edit Key Cue URL's via
	]}	
;;? F MODE ================================================================
	{:des "f-mode for f things" :rules [ :f&
		;; f+l-cmd/space/r-cmd for left click, right click, and button 3
			[:spacebar :button1] [:right_control :button1] ;;• f+spacebar for left-click (f+right-control same thing with UHK compatability)
			[:right_gui :button2];;• f+right_command for right-click
			[:left_gui :button3];;• f+left_command for "button3" ... (!Cbutton1 doesn't work as a <to> but can be recreated using button3)
		
		;; keyboard shortcuts
		;; move
			;; [:##t :!Tf7] ;;• f+t Change the way Tab moves focus ⌃F7
			;; [:##k :!Tf1] ;;• f+k Turn keyboard access on or off ⌃F1
		[:##m :!Tf2] ;;• f+m Move focus to the menu bar ^F2 ☑️
		[:##d :!Tf3] ;;• f+d Move focus to the Dock ^F3 ☑️
		[:##t :!Tf5] ;;• f+t Move focus to the window toolbar ⌃F5 ❓
		[:##w :!Tf6] ;;• f+w Move focus to the floating window ^F6 ❓
		[:##s :!Tf8] ;;• f+s Move focus to status menus ^F8 ❌
		[:tab :!Cgrave_accent_and_tilde]  ;;• f+tab Move focus to next window ⌘+tilde ☑️
		[:##grave_accent_and_tilde :!Tgrave_accent_and_tilde] ;;• f+` Move focus to active or next window ⌃`
		;;• Show contextual menu
	;;TODO (F MODE)
		;; [ ] work back in :km "Focus 1", (add © and consolidate) #common-commands
		;; [ ] revisit slate focus windows (no equivilent)
		[:period [[:SPKR3] [:btt "Show Menu Bar in Context Menu"]] ] ;;• f+b for btt "Show Context Menu for Selected Item"
		[:n [:open "kmtrigger://macro=EFE846C8-9B93-47C5-9A9F-9EBA0D76D79F"] ] ;;• f+n for float notes for app 🔰 
		[:p [:open "kmtrigger://macro=B4905F39-C99B-4DC8-B0F1-D86DA7E3DE6A"] ] ;;• f+p for 🎨🥏 Float Palette
		;; [:m [:open "kmtrigger://macro=1D8E356F-C110-48C0-982B-7895C037B349"] ] ;;• f+m for Float Front Window with Marked
		;; [:l [:open "raycast://extensions/raycast/floating-notes/toggle-floating-notes-window"] ] ;;• f+l for raycast floating notes (via URL)
		;;todo [:k  [:open "shortcuts://run-shortcut?id=2D1A4FED-D5A1-4122-A125-7D5BF6C45E20"]] ;;• f+k Full Keyboard Access Toggle via shortcuts

	]}
;;? G MODE ================================================================
	{:des "g-mode for g things" :rules [ :g&
		[:spacebar [:km "Click GUI Button"]] ;;• g+spacebar for Click GUI Button
		[:right_control [:km "Click GUI Button"]] ;;• g+right_control for Click GUI Button (for compatability with UHK split spacebar)
		[:k [[:run "goku"] [:tink]] ] ;;• g+k to run goku #1... works!
		
		[:j [:t :e :s :t]] ;;• g+j to run test		

	;;TODO (G MODE)
		;; change below to use shortcuts template (after replacing)
			;; [:o [:open "shortcuts://run-shortcut?id=E5ADC50C-B86E-47C7-8125-D437598EDA92"] ] ;;• g+o to run GO Ultra shortcut (double-tap on phone...)
		;; [ ] circleback to rabbit hole
		;; think through test
	]}
;;? H MODE ================================================================
	{:des "h-mode for h things" :rules [ :h&
		[:d [[:SPKR3] [:km "© Hide Application"] ]] ;;• h+d for © Hide Application
		[:k [[:SPKR3] :!Th]] ;;• h+k for Hookmark (via ⌃h) 🔰 new 8/11/23
	;;TODO (H MODE)
		;; ❌ rework  [:i [[:SPKR3] :!Ti] ];;• h+i for Slidepad (via ⌃i) 🔰 new 8/17/23, see if causes false positives
		;; rehome 		[:w [[:SPKR3] [:km "Float Obsidian Workbench with Marked"]]] ;;• w+b Float Obsidian Workbench with Marked
		;; rework 		[:p [[:SPKR3] [:open "/Applications/Setapp/MenubarX.app" ] ]] ;;• h+p for MenuBarX via :open (instead of ⌥+x hotkey)
	]}
;;? I MODE (EMPTY) ================================================================
	;; {:des "i-mode for i things" :rules [ :i&
	;; TODO (I MODE)
	;; ]}
;;? J MODE ================================================================
	{:des "j-mode for j things" :rules [ :j&
		[:w [[:SPKR3] :!CTOw]] ;;• j+w for Jump to Window (via Context hotkey ⌥space) -> 2024-08-21 chaged from !Ospacebar to 
	;;TODO (J MODE)
		;; rework Jump to.... (see vscode://file/Users/loudog/Sync/config.files/Karabiner/krb-purged.edn:273)
			[:s [ [:SPKR3]  :!OSCj ] ] ;;• j+s Search (Jump to) SideNotes (via ⌥⇧⌘+j)
			;; [:b [:km "Jump to Bear"]] ;;• j+b for Jump to Bear˛st (global)
			;; [:o [:km "Jump to OmniFocus"]] ;;• j+o for Jump to OmniFocus 🟡 needs work > 🟢 better now
			;; [:r [ [:SPKR3] [:open "kmtrigger://macro=047B91AB-DBCA-4976-BE79-C9A0603FA8B2"]]] ;;• j+r JUMP TO Apple Reminders (via km macro that uses GoodTask)
			;; [:p [:open "kmtrigger://macro=66C07414-FE85-44A0-A5DC-2C2DAD502E26"]] ;;• j+p for Jump to Palette via KM
			;; [:r [ [:SPKR3] [:open "alfred://runtrigger/com.jc.roampagesearch/roamSearchKE/?arg"]]] ;;• j+r Search Roam
		;; #common-command
			;; [:right_command [:km "Jump To..."]] ;;• j+right command for common command Jump to ⭕ TODO
			;; [:t [:km "© Jump To"]] ;;• j+t for © Jump To (via KM global contextual)
			;; [:right_gui [:km "© Jump To"]] ;;• j+right_gui for... AVAILABLE
	]}
;;? K MODE ================================================================
	{:des "k-mode for k things" :rules [ :k&
		
		[:e [:km "edit karabiner config"]] ;;• k+e pick config-files #✨ updated 2024-08-23
			;; [:e [:km "picklist config-files"]] ;;• k+e pick config-files #✨ updated 2024-08-23
		[:c [:open "file:///Users/loudog/vaults/obs-git-config/config.files/karabiner/karabiner-copy-for-MBX.edn"]] ;;• k+c to open this file
		; 🪄 Keyboard Maestro stuff
			[:spacebar :!CSOspacebar] ;;• k+spacebar for to Trigger Macro by Name (via hotkey) 👈 this is faster than triggering by km: alias
			[:left_gui [:km "Trigger Macro by Name"]] ;;• by km alias
			[:spacebar [:open "kmtrigger://macro=B55591CD-BB5B-4F28-9A4C-8EFDD59A2509"]] ;;• by  UUID URL
			[:left_option :!CSOspacebar] ;;• by keypress (🏎️ FASTEST!)

			[:p :!SOCp]  ;;• k+p for kyper (Keyboard Maestro app conflict palette) (via ⇧⌥⌘+p)
			;; [:slash :!SOCslash]  ;;• k+slash for KM Select Menu by Name app (⌥⇧⌘+/) 
			;; [:right_gui [:open "kmtrigger://macro=791BDFF3-638B-4201-BDED-4D457748A972"]] ;;• select macro 

		; 🐿 KY STUFF: l for roam log, d for dashboard)
			[:y [:open "https://roamresearch.com/#/app/myoldkyhome"]] ;;• k+y for 🐿📓 KY House Log
				[:l [:open "https://roamresearch.com/#/app/myoldkyhome)"]] ;;• k+l ky house log roam graph
			[:d [:open "https://www.notion.so/my-old-ky-home/My-Old-Kentucky-Notion-c9ffb2a6aa6540e1b3e80a34e5db2d72?p=226804d32b084480a53b9c5ec4bde45f&showMoveTo=true)"]] ;;• k+d for ky house dashboard Notion
			[:j [:open "https://www.notion.so/my-old-ky-lakehouse/JOURNAL-666e38a11fc04a48b9893fc57bbd2c5e"]] ;;• k+j for 📓 KY RUNNING JOURNAL (Notion)
			[:w [:open "kmtrigger://macro=08A820FF-1597-4884-A501-F57DF15D43D8"]] ;;• k+w for 🐿🧰 KY Workbench via marked
		;;TODO (K MODE)
		]}
;;? L MODE ================================================================
	{:des "l-mode for l things" :rules [ :l&
		[:1 [:open "https://roamresearch.com/#/app/Lous-Greenhouse" ]] ;;• l+1 for Lous-Greenhouse
			[:g [:open "https://roamresearch.com/#/app/Lous-Greenhouse" ]] ;;• l+g for Lous-Greenhouse
		[:2 [:open "https://roamresearch.com/#/app/loutodo" ]] ;;• l+2 for loutodo
			[:t [:open "https://roamresearch.com/#/app/loutodo" ]] ;;• l+t for loutodo
		[:3 [:open "https://roamresearch.com/#/app/thfkg" ]] ;;• l+3 for thfkg
		[:4 [:open "https://roamresearch.com/#/app/myoldkyhome" ]] ;;• l+4 for myoldkyhome roam

		[:d [:open "https://www.notion.so/loudog/LOU-DASHBOARD-2af984c519f8474a8632893fd5482eba"] ] ;;• l+d for  Lou's Dashboard (Notion) ✨ new
	;;TODO (L MODE)
		;; [:p [ [:open "kmtrigger://macro=46019D37-B359-498F-B0E0-CD49B6373FB8"]] ] ;;• l+p Log Palette (via km uuid URL
	]}
;;? M MODE (EMPTY)================================================================
	{:des "m-mode for m things" :rules [ :m&
	;;TODO (M MODE)
	]}
;;? N MODE (transfer to layer or +mode) ================================================================
	{:des "n-mode for n things" :rules [ :n&
		[:i [[:tink] :!CTSo]] ;;• n+i New Omnifocus Quick Entry (via omf hotkey ⌃⇧⌘+o) 🟢 FIXED
		[:q [:open "raycast://extensions/raycast/raycast/create-quicklink"]] ;;• n+q New Quick Link via Raycast
		[:t [:km "New Typinator Item from Selection"]] ;;• n+t for Quick Add Typinator Item ❓ TODO
		;;todo [:x [:km "New Text Replacement From Selection"]] ;;• n+t for New Text Replacement from suggestion 
		; new
		[:w [:km "New Window"]] ;;• n+w for New Window © glo
		[:g [:km "New ChatGPT Chat"]] ;;• n+g New ChatGPT Chat
		[:d [:km "New Drafts Note"]] ;;• n+d for New Drafts Note
		[:b [:km "New Bear Note"] ] ;;• nb for New Bear Note
		[:m [:km "New Message"]] ;;• n+m for New Message
		[:c [:km "New Event"]] ;;• n+c New Event via Fantastical
		[:r [:open "raycast://extensions/raycast/apple-reminders/create-reminder"] ] ;;• n+r for new reminder via raycast
		[:p [:open "kmtrigger://macro=F47E78A8-44C9-4A80-BC17-AE4D101DD6CA"]] ;;• n+p for new Palette 🔰
		[:spacebar [:open "kmtrigger://macro=448A7D18-74A3-443E-919F-D230D5070EA2"]] ;;• n+spacebar for 🔫 New Trigger List 🔰
	;;TODO (N MODE)
		;; [:l [:open "kmtrigger://macro=46019D37-B359-498F-B0E0-CD49B6373FB8"]] ;;• n+l for Log Palette enabled
	]}
;;? O MODE (empty maybe leave) ================================================================
	;; {:des "o-mode for o things" :rules [ :o&
	;;TODO (O MODE)
	;; ]}
;;? P MODE ================================================================
	{:des "p-mode for p things" :rules [ :p&
		[:w [[:SPKR3] [:km "Activate 1Password"] ]] ;;• p+w for search 1password... ;; edited12/05/23 > edited 3/15/24  
		[:1 :!OSTp] ;;• 1passsword
	;;TODO (P MODE)
		;; [:c  [:km "Paste Clipboard by Name"]] ;;• p+c for Paste Clipboard by Name
		;; [:l [:km "picklist master"] ] ;;•
		;; [:u [:km "picklist urls"] ] ;;• p+u to edit url picklist
	]}
;;? Q MODE (rework as #layer: ?)================================================================
	{:des "q-mode for q things" :rules [ :q&
		[:l [ [:SPKR3] [:open "drafts://open?uuid=00E137E9-0DB5-4824-8929-D330416244CE"]]] ;;• q+l open 🔗 QUICK LINKS

	;;TODO (Q MODE)
		;; rehome [:n [ [:SPKR3] [:open "drafts://open?uuid=6823BE09-6193-4D97-894A-5147B7285DD9"]]] ;;• q+n to open ⚡️ Quick Notes (Draft) #Drafts
		;; rehome [:b [ [:SPKR3] [:open "drafts://open?uuid=02B40CD6-2E52-444F-9689-9B8D7D859436"]]] ;;• q+b to open 🎛 QUICK DASHBOARD #Drafts
		
		;; [:d [ [:open "kmtrigger://macro=EAE91CED-C7F9-466E-9AE1-5614763DB869"]]  ] ;;•q+d for ❎ Add to main pick list
		;; [:m [ [:open "kmtrigger://macro=4C54CAED-E4FA-47F3-9626-4E09B9E56BA6"]]  ] ;;•q+m for Quick Menu
		;; [:c [ [:SPKR3]  [:open "obsidian://advanced-uri?vault=ldb&commandid=obsidian42-text-transporter%253Aobsidian42-text-transporter-QC"] ] ] ;;•q+c for quick capture to highly opinionated vault 	
	]}
;;? R MODE ================================================================
	{:des "r-mode for r things" :rules [ :r&
	; remote-mode (see vscode://file/Users/loudog/Sync/config.files/Karabiner/krb-purged.edn:431)
		;; maybe should be #layer:
		[:return_or_enter [:km "- Remote Modes Palette"]] ;;• r+return/enter for "- Remote Modes Palette"
		[:y [:km "YouTube Remote"]] 		;;• y for YouTube Remote
		[:x [:km "Deactivate Remote"]] 		;;• q for Deactivate Remote
	;;TODO (R MODE)
		;; TODO remote mode
		;; raycast reminders
			[:slash [:open "raycast://extensions/raycast/apple-reminders/my-reminders"]] ;;• r+/ raycast my reminders #Reminders
			;; [:equal_sign [:open "raycast://extensions/raycast/apple-reminders/create-reminder"]] ;;• r+= raycast new reminder reminders #Reminders
			;; [:delete_or_backspace [:!SCf12]] ;;• r+⌫ for raycast reminders menuapp ❓ BROKEN	
			;; ❌ doesn't work from outside raycast
				;; [:q [:open "raycast://extensions/raycast/apple-reminders/quick-add-reminder?arguments=%7B%22text%22%3A%22%22%2C%22notes%22%3A%22%22%7D"]] ;;• r+= raycast my reminders
			[:0 [:open "btt://trigger_named/?trigger_name=rm1"]] ;;• r+0 raycast reminders menuapp ❓ BROKEN
	]}
;;TODO use :layer for surround with XXX (or simultaneous keys to... consider DefaultKeyBinding.dict) #layer:
;;? S MODE ================================================================
	{:des "s-mode for s things" :rules [ :s&
		[:r [:open "/System/Applications/Siri.app"]] ;;• s+r for siri via application path 🟢

	;;TODO (S MODE)
		;; todo mouse mode
		[:t :!STCs] ;;• s+t for Speak Text via system hot key (⇧⌥⌃S) ⭕
		;; [:m [:km "Select Menu by Name"]] ;;• s+m for Select Menu by Name
		[:c [:km "Paste Clipboard by Name"]] ;;• s+c for Paste Clipboard by Name
		;; [:v [:km "Shortcuts via Services Menu"]] ;;• s+v for Shortcuts via Services Menu via KM macro
		;; [:c [:open "alfred://runtrigger/com.alfredapp.vitor.shortcuts/Shortcuts+Search+Workflow/?argument=test"]] ;;• s+c for run Shortcuts Alfred Workflow via custom trigger URL woring
		;; [:c [:alf "Shortcuts" "com.alfredapp.vitor.shortcuts"]] ;;• s+c for Shortcuts via Alfreds
		;; [:spacebar [[:SPKR3][:alf "Search OmniFocus Tasks via Alfred" "net.rhydlewis.alfred.searchomnifocus"]]] ;; o+spacebar for Jump to OmniFocus 🟡 NEEDTOFIX

	]}
;;? T MODE ================================================================
	{:des "t-mode for t things" :rules [ :t&
		[:r [:soundOn]] ;;• TEST  t+r for test rule (🔈 worked) 🔉🔊🛎🔔📢📯
		[:d [[:SPKR3] :!Ti] ];;• t+d for Slidepad (via ⌃i)
		[:s [[:SPKR3] :!OSCs]] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
		[:g [:t :h :e :g :o :s :p :e :l :a :c :c :o :r :d :i :n :g :t :o :l :o :u] ] ;;• t+g tgal expansion

	;;TODO (T MODE)
		;;* Raycast Todo list 
			;; [:delete_or_backspace [:open ]] ;;• t+delete for raycast todos menubar 🔰 
			;; [:equal_sign [[:SPKR3] [:!STCf11] ]] ;;• t+= for open raycast todo-list 
			;; [:equal_sign [:open "raycast://extensions/maggie/todo-list/index"] ] ;;• t+= for raycast todo-list via raycasut URL
			;; [:return_or_enter [:open "raycast://extensions/maggie/todo-list/index"] ] ;;• t+= for open raycast todo-list
			;; raycastbtt://trigger_named/?trigger_name=clickMenu ;; todo-list menubar
		;; todo change to #shortcuts
			[:1 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%201"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
			[:2 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%202"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
			[:3 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%203"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
			[:4 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%204"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
			[:5 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%205"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
			[:6 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%206"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
			[:7 [[:SPKR3] [:open "shortcuts://run-shortcut?name=Tot%207"]] ] ;;• t+s Open or Sidenotes td(via hotkey ⌥⇧⌘+s)
	]}
;;? U MODE (empty)================================================================
	;; {:des "u-mode for u things" :rules [ :u&
	;;TODO (U MODE)
	;; ]}
;;? V MODE ================================================================
	{:des "v-mode for v things" :rules [ :v&
		[:1 [:km "paste clipboard 1"] ] ;;• c+1 paste to clipboard 1
		[:2 [:km "paste clipboard 2"] ] ;;• c+2 paste to clipboard 2
		[:3 [:km "paste clipboard 3"] ] ;;• c+3 paste to clipboard 3
	;;TODO (V MODE)
		[:p [[:SPKR3] [:open "raycast://confetti"]]]  ;;• v+p AVAILABLE
	]}
;;? W MODE ================================================================
	{:des "w-mode for w things" :rules [ :w&
		[:spacebar [[:SPKR3] :mission_control] ] ;;• w+spacebar for Expose  (INSTEAD  of via ⌃⌥⌘+f3) ->
			;; #uhk
				;; [:right_control [[:SPKR3] :!SOCf3 ]] ;; for uhk2
		[:c [:km "Center Window on Current Mouse Location"] ] ;;• w+c for km "Move Mouse to Focused Window" #core
		[:left_gui [[:SPKR3] :!!f14 ]] ;;* w+left_gui for moom via ⌃⌥⇧⌘F14 (accessable with left hand)
	;;TODO (W MODE)
		[:tab [:btt "Recall Saved Window"]] ;;• w+tab for Recall Saved Window (via BTT)
		;; workbench
			[:m [[:SPKR3] [:open "kmtrigger://macro=2B5C8666-4BD0-4FA7-B76F-A4F28DDB67AC"]]] ;;• w+m Workbench Menu
			[:b [[:SPKR3] [:km "Float Obsidian Workbench with Marked"]]] ;;• w+b Float Obsidian Workbench with Marked
		; spaces (replace SPKR3) see krb-purged.edn line 591 vscode://file/Users/loudog/Sync/config.files/Karabiner/krb-purged.edn:579
			[:a [[:SPKR3] :!STOcomma]] ;;• w+a for Switch Active Workspace Left (via System Hotkeys)
			[:d [[:SPKR3] :!STOperiod]] ;;• w+d for Switch Active Workspace Right (via System Hotkeys)
			;; [:f [[:SPKR3] [:btt "Move Window Space Right"] ] ] ;;• w+f  Move Window Space Right (via btt)
			;; [:caps_lock [[:SPKR3] [:btt "Move Window Space Left"] ] ] ;;• w+capslock Move Window Space Left (via btt)		
	]}
;;? X MODE ================================================================
	{:des "x-mode for x things" :rules [ :x&
	;;TODO (X MODE)
		;; clear notification
		;; rehome 		[:l [:!Ta :!TSe :!Sright_arrow [:SPKR3] [:km "Extract URL from Selection"]]  ] ;;• compiled >>> did keyboard sequence, DID sound, DID KM 😀😀😀😀😀😀😀
		;;  #common-command
			;; 	[:u [:km "© Copy URL"]] ;;• x+u for © Copy URL (via KM global context)
	]}
;;? Y MODE (EMPTY) ================================================================
	;; {:des "y-mode for y things" :rules [ :y&
	;;TODO (Y MODE)
	;; ]}
;;? Z MODE (rework to layer mode?)================================================================
	{:des "z-mode for z things" :rules [ :z&
		[:i :volume_increment] ;;• z+i for volume up
		[:k :volume_decrement] ;;•z+k for volume down
		[:p :vk_consumer_brightness_up] ;;• z+p for brightness up
		[:n :vk_consumer_brightness_down] ;;• z+n for brightness down
		;; TODO (Z MODE)
		]}
] ;;? CLOSES main
} ;;? CLOSES FILE